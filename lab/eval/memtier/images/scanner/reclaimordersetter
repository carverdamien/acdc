#!/usr/bin/env python
import time
import sys
import os

def main():
    CGROUP=sys.argv[1]
    SLEEP=int(sys.argv[2])
    while True:
        time.sleep(SLEEP)
        loop(CGROUP)

def loop(CGROUP):
    stats = [get_value(cg) for cg in iterate_cgroups(CGROUP)]
    order = 1
    for s in sorted(stats, key=lambda x:x[1]):
        cg, _ = s
        set_reclaim_order(cg,order)
        order+=1

def iterate_cgroups(cgroot):
    for root, dirs, files in os.walk(cgroot):
        if 'memory.reclaim_order' in files:
            yield root

def get_value(cg):
    val = 0
    keys = ['recent_rotated_anon',
            'recent_scanned_anon',
            'recent_rotated_file',
            'recent_scanned_file']
    values = {}
    try:
        with open('%s/memory.stat' % cg) as f:
            for line in f:
                k,v = line.split(' ')
                if k in keys:
                    values[k] = float(v)
        val = (values['recent_scanned_file']+values['recent_scanned_anon'])/(1+values['recent_rotated_file']+values['recent_rotated_anon'])
    except Exception as e:
        print(e)
    return (cg,val)

def set_reclaim_order(cg, order):
    try:
        with open('%s/memory.reclaim_order' % (cg),'w') as f:
            f.write("%d\n" % order)
    except Exception as e:
        print(e)

if __name__ == '__main__':
    main()
